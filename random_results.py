import numpy as np

n_models = 3 #5
dimensions = [2,3,4,8,12,16, 20] 
n_dims = len(dimensions)
n_properties = 3

SMCs = ["SVI-GP", "SVI-BNN", "EP-GP"]
n_smc = len(SMCs)


# ------ SVI_GP---------------------------------------------

ACCs = np.empty((n_dims, n_models, n_properties)) # accuracies
MSEs = np.empty((n_dims, n_models, n_properties)) # mean square errors
UNCs = np.empty((n_dims, n_models, n_properties)) # average uncertainty areas
TIMEs = np.empty((n_dims, n_models, n_properties)) # training times

# dim2
ACCs[0,0] = [67.5,53,62.5]
MSEs[0,0] = np.sqrt([0.0001374816106,0.000159831808938839,0.000409172943631361])
UNCs[0,0] = [0.0124123704431077,0.0211056859925966,0.0178044276307018]
TIMEs[0,0] = [04.46,03.59,03.08] #hours.minutes

ACCs[0,1] = [94.0,94.0,34.5]
MSEs[0,1] = np.sqrt([0.0001767182944,0.0001767182944, 0.0001416771528])
UNCs[0,1] = [0.01595955777,0.01595955777,0.0149409944611907]
TIMEs[0,1] = [07.01,07.01,06.07]

ACCs[0,2] = [68.5,94.0,34.5]
MSEs[0,2] = np.sqrt([0.00157787945,0.0001767182944,0.0001416771528])
UNCs[0,2] = [0.04223642319,0.01595955777,0.01494099446]
TIMEs[0,2] = [04.07,07.00,06.07]

# dim3
ACCs[1,0] = [85.0,85.0,52.666666666666664]
MSEs[1,0] = np.sqrt([0.0006537608619,0.0006537608619,0.0003369787784])
UNCs[1,0] = [0.02598231219,0.02598231219,0.02204316728]
TIMEs[1,0] = [04.17,04.18,03.44]

ACCs[1,1] = [60.0,50.0,63.333333333333336]
MSEs[1,1] = np.sqrt([0.0008847717501,0.0008153031516,0.001666082541])
UNCs[1,1] = [0.03698564549,0.0316381224,0.03552935233]
TIMEs[1,1] = [06.37,05.54,05.56]

ACCs[1,2] = [58.666666666666664,58.666666666666664,36.0]
MSEs[1,2] = np.sqrt([0.0001305007022,0.0001305007022,0.0001718360301])
UNCs[1,2] = [0.01097652591,0.01097652591,0.01271239895]
TIMEs[1,2] = [05.33,05.31,05.34]

# dim4
ACCs[2,0] = [53.0,53.0,34.0]
MSEs[2,0] = np.sqrt([0.000507479631,0.000507479631,0.003921859286])
UNCs[2,0] = [0.02408074219,0.02408074219,0.03243846608]
TIMEs[2,0] = [04.29,04.29,04.14]

ACCs[2,1] = [61.0,49.25,56.0]
MSEs[2,1] = np.sqrt([0.0007406237109,0.0003081061425,0.0009539713762])
UNCs[2,1] = [0.02859252858,0.01633823557,0.0281802482]
TIMEs[2,1] = [07.11,07.22,06.57]

ACCs[2,2] = [62.75,41.75,67.25]
MSEs[2,2] = np.sqrt([0.002430933834,0.000106357535,0.0013823980630665884])
UNCs[2,2] = [0.04949452353,0.01380112988,0.02824441642658563]
TIMEs[2,2] = [07.13,09.09,05.49]

# dim8
ACCs[3,0] = [66.875,67.125,44.875]
MSEs[3,0] = np.sqrt([0.001379122848,0.001481597373,0.0002244509299])
UNCs[3,0] = [0.03823628858,0.01750000956,0.01074139648]
TIMEs[3,0] = [08.51,08.04,08.03]

ACCs[3,1] = [50.875,59.75,63.125]
MSEs[3,1] = np.sqrt([0.0007511348593,0.0006095652584,0.001322258438])
UNCs[3,1] = [0.02848395345,0.02352462387,0.03595277157]
TIMEs[3,1] = [11.23,11.44,11.28]

ACCs[3,2] = [64.625,67.25,48.125]
MSEs[3,2] = np.sqrt([0.0001202207597,0.0002331654272,0.001387314707])
UNCs[3,2] = [0.007013069974,0.01432448846,0.03448116629]
TIMEs[3,2] = [03.13,10.40,10.13]

# dim12
ACCs[4,0] = [94.25,58.25,25.833333333333332]
MSEs[4,0] = np.sqrt([0.0007453736246,0.00182450519,0.00201551808])
UNCs[4,0] = [0.009908788475,0.02657052247,0.0410185337]
TIMEs[4,0] = [11.02,10.30,10.51]

ACCs[4,1] = [65.66666666666667,45.666666666666664,26.833333333333332]
MSEs[4,1] = np.sqrt([0.001852237776,0.0008288345956,0.001618857608])
UNCs[4,1] = [0.0526428961,0.3024193208,0.04322703659]
TIMEs[4,1] = [16.15,17.16,19.58]


ACCs[4,2] = [42.916666666666664,65.58333333333333,45.75]
MSEs[4,2] = np.sqrt([0.00365512108867663,0.005016229201,0.003656081936])
UNCs[4,2] = [0.003655121089,0.05703009755,0.05191752895]
TIMEs[4,2] = [15.56,13.30,10.34]

# dim16
ACCs[5,0] = [67.9375,95.5625,72.0]
MSEs[5,0] = np.sqrt([0.001468140689,0.0007019906538,0.0006640066545])
UNCs[5,0] = [0.02873204209,0.01024553922,0.02500009388]
TIMEs[5,0] = [13.48,13.55,13.32]

ACCs[5,1] = [63.125,55.0625,24.1875]
MSEs[5,1] = np.sqrt([0.001821331163,0.002943934438,0.0008907354513])
UNCs[5,1] = [0.02887078062,0.05063432849,0.02557794385]
TIMEs[5,1] = [24.33,20.22,20.09]

ACCs[5,2] = [59.8125,53.8125,45.875]
MSEs[5,2] = np.sqrt([0.002462155021,0.01263392936,0.01027779007])
UNCs[5,2] = [0.03240087868,0.101312825485478,0.08313736289]
TIMEs[5,2] = [24.49,23.45,22.25]

# dim20
ACCs[6,0] = [66.85,52.3,48.9]
MSEs[6,0] = np.sqrt([0.00314679102215301,0.00711809473138876,0.00525027432002356])
UNCs[6,0] = [0.0714321271944984,0.0881386633051879,0.0806547359944]
TIMEs[6,0] = [17.10,16.35,19.24]

ACCs[6,1] = [40.7,73.55,49.8]
MSEs[6,1] = np.sqrt([0.001626339797,0.002587101125,0.002200211935])
UNCs[6,1] = [0.04511167671,0.04348873585,0.04031776537]
TIMEs[6,1] = [24.40,24.21,26.54]


ACCs[6,2] = [53.95,80.2,64.25]
MSEs[6,2] = np.sqrt([0.00584868018251244,0.000968219910479321,0.00408914572])
UNCs[6,2] = [0.09867199628129962,0.00196851468305859,0.06348667387]
TIMEs[6,2] = [22.24,13.42,28.01]

print("GP: mean acc = ", ACCs.mean(), ", min = ", ACCs.min())
print("GP: mean mse = ", MSEs.mean(), ", max = ", MSEs.max())
print("GP: mean unc = ", UNCs.mean())

SVI_GP = {"ACC":ACCs, "MSE": MSEs, "UNC": UNCs, "TIME": TIMEs}


# ------ SVI_BNN---------------------------------------------

ACCs = np.empty((n_dims, n_models, n_properties)) # accuracies
MSEs = np.empty((n_dims, n_models, n_properties)) # mean square errors
UNCs = np.empty((n_dims, n_models, n_properties)) # average uncertainty areas
TIMEs = np.empty((n_dims, n_models, n_properties)) # training times

# dim2
ACCs[0,0] = [97.5,86.0,92.5]
MSEs[0,0] = np.sqrt([0.0001445408416,0.0002224819036,0.000377191230654716])
UNCs[0,0] = [0.06456360199,0.1155237813,0.0984825297803456]
TIMEs[0,0] = [02.16,02.16,02.16]

ACCs[0,1] = [100.0,100.0,96.0]
MSEs[0,1] = np.sqrt([0.0007286393084,0.0002062589338,0.0005154368118])
UNCs[0,1] = [0.09383191051,0.07823375204,0.1112428025]
TIMEs[0,1] = [03.10,03.10,03.09]

ACCs[0,2] = [96.0,97.5,98.0]
MSEs[0,2] = np.sqrt([0.003294481663,0.002301202156,0.0009807950119])
UNCs[0,2] = [0.1721694013,0.1270732761,0.1557922961]
TIMEs[0,2] = [02.08,02.11,02.14]

# dim3
ACCs[1,0] = [100.0,99.66666666666667,92.33333333333333]
MSEs[1,0] = np.sqrt([0.001058195252,0.0004770083178,0.0004343627952])
UNCs[1,0] = [0.1336796138,0.1217441811,0.110001136]
TIMEs[1,0] = [02.28,02.28,02.30]

ACCs[1,1] = [92.66666666666667,95.0,99.0]
MSEs[1,1] = np.sqrt([0.00130196393,0.0008385627298,0.001257190248])
UNCs[1,1] = [0.1395391483,0.1247441901,0.1653686565]
TIMEs[1,1] = [04.44,04.47,04.19]

ACCs[1,2] = [99.33333333333333,99.0,96.66666666666667]
MSEs[1,2] = np.sqrt([0.0001287674968,0.0001832471607,0.0003062993346])
UNCs[1,2] = [0.06358363681,0.07085643885,0.07741439101]
TIMEs[1,2] = [03.19,03.17,03.22]

# dim4
ACCs[2,0] = [94.5,97.0,96.5]
MSEs[2,0] = np.sqrt([0.0008336597821,0.0003557064338,0.003593610134])
UNCs[2,0] = [0.09465818539,0.08771609006,0.1477879759]
TIMEs[2,0] = [03.20,03.21,03.22]

ACCs[2,1] = [96.75,95.75,96.25]
MSEs[2,1] = np.sqrt([0.0004680421844,0.0003141790512,0.0004045215901])
UNCs[2,1] = [0.137992487,0.0880375467,0.131238595]
TIMEs[2,1] = [05.11,05.11,05.12]

ACCs[2,2] = [97.75,89.5,95.25]
MSEs[2,2] = np.sqrt([0.002010995522,0.0002310822747,0.0003514780838])
UNCs[2,2] = [0.1630618244,0.0859431002,0.1182220398]
TIMEs[2,2] = [04.33,04.27,04.33]

# dim8
ACCs[3,0] = [98.5,98.5,97.5]
MSEs[3,0] = np.sqrt([0.000716719951,0.00268159085,0.0005820903461])
UNCs[3,0] = [0.1525009867,0.1645780611,0.05892392094]
TIMEs[3,0] = [06.52,8.53,07.03]

ACCs[3,1] = [89.875,98.5,95.375]
MSEs[3,1] = np.sqrt([0.000687233638,0.000629503862,0.0009058450232])
UNCs[3,1] = [0.1121652908,0.1076961798,0.1531759512]
TIMEs[3,1] = [13.28,13.42,14.00]

ACCs[3,2] = [99.5,100.0,98.0]
MSEs[3,2] = np.sqrt([0.0002575945982,0.0002248328528,0.0009007805493])
UNCs[3,2] = [0.03750412852,0.08445483188,0.1425722244]
TIMEs[3,2] = [12.32,08.43,06.26]

#dim12
ACCs[4,0] = [98.66666666666667,89.41666666666667,94.25]
MSEs[4,0] = np.sqrt([0.001265321858,0.0005385327386,0.0004513566673])
UNCs[4,0] = [0.06534875304,0.09507293445,0.06113063867]
TIMEs[4,0] = [10.37,10.45,10.49]

ACCs[4,1] = [98.91666666666667,91.16666666666667,95.08333333333333]
MSEs[4,1] = np.sqrt([0.0008542200667,0.0007267957553,0.0004018681357])
UNCs[4,1] = [0.1602534018,0.0943343294528112,0.07893101894]
TIMEs[4,1] = [14.08,20.10,09.28]

ACCs[4,2] = [95.25,85.66666666666667,90.75]
MSEs[4,2] = np.sqrt([0.001546026324,0.00149002159014344,0.000972450478])
UNCs[4,2] = [0.1329417467,0.1352368925,0.1238064297]
TIMEs[4,2] = [11.10,10.57,07.55]

# dim16
ACCs[5,0] = [96.5625,99.5,94.0]
MSEs[5,0] = np.sqrt([0.001670237514,0.00190264883,0.0003556385636])
UNCs[5,0] = [0.1342030703,0.04841693411,0.1173349951]
TIMEs[5,0] = [14.47,14.31,14.32]

ACCs[5,1] = [92.9375,92.5,98.75]
MSEs[5,1] = np.sqrt([0.0005087535246,0.0006573123974,0.0004624330322])
UNCs[5,1] = [0.1299670757,0.1197512407,0.07738229823]
TIMEs[5,1] = [15.57,20.02,21.49]

ACCs[5,2] = [97.5,71.1875,94.4375]
MSEs[5,2] = np.sqrt([0.0009017865523,0.00569935422390699,0.00173379655461758])
UNCs[5,2] = [0.09288836459,0.166129124434168,0.13291859829854]
TIMEs[5,2] = [18.58,22.33,14.59]

# dim20
ACCs[6,0] = [93.95,98.5,95.25]
MSEs[6,0] = np.sqrt([0.000727114384062588,0.000704379810485988,0.00096476066391915])
UNCs[6,0] = [0.131651114610526,0.166267984780717,0.139564261891986]
TIMEs[6,0] = [18.16,18.17,22.07]

ACCs[6,1] = [95.3,93.5,87.9]
MSEs[6,1] = np.sqrt([0.0006210175925,0.001084705931,0.0004747388884])
UNCs[6,1] = [0.08887660884,0.1461006906,0.0729582894]
TIMEs[6,1] = [27.30,30.50,33.52]

ACCs[6,2] = [96.55,98.7,86.55]
MSEs[6,2] = np.sqrt([0.000887544069,0.0006924454938,0.00174023222643882])
UNCs[6,2] = [0.1459532511,0.08145990388,0.10285925306097]
TIMEs[6,2] = [14.38,9.30,13.04]

print("BNN: mean acc = ", ACCs.mean(), ", min = ", ACCs.min())
print("BNN: mean mse = ", MSEs.mean(), ", max = ", MSEs.max())
print("BNN: mean unc = ", UNCs.mean())

SVI_BNN = {"ACC":ACCs, "MSE": MSEs, "UNC": UNCs, "TIME": TIMEs}


# ------ EP_GP---------------------------------------------
ep_dimensions = [2,3,4] 
n_ep_properties = 3
n_ep_dims = len(ep_dimensions)

ACCs = np.empty((n_ep_dims, n_models, n_ep_properties)) # accuracies
MSEs = np.empty((n_ep_dims, n_models, n_ep_properties)) # mean square errors
UNCs = np.empty((n_ep_dims, n_models, n_ep_properties)) # average uncertainty areas
TIMEs = np.empty((n_ep_dims, n_models, n_ep_properties)) # training times

# dim2
ACCs[0,0] = [52.5,38.0,53.0]
MSEs[0,0] = np.sqrt([0.000145713369,0.0005749319574,0.0003972114547])
UNCs[0,0] = [0.025715741,0.01190572827,0.03733941447]
TIMEs[0,0] = [02.08,01.40,02.04]

ACCs[0,1] = [72.0,72.0,25.5]
MSEs[0,1] = np.sqrt([0.008863095209,0.0008863095209,0.0007007414188])
UNCs[0,1] = [0.005393420941,0.005393420941,0.005538404708]
TIMEs[0,1] = [02.23,02.23,02.19]

ACCs[0,2] = [45.5,41.5,36.5]
MSEs[0,2] = np.sqrt([0.004533420187,0.004854744431,0.004632054088])
UNCs[0,2] = [0.01608071266,0.01183099858,0.0128659458]
TIMEs[0,2] = [01.54,02.40,02.30]

# dim3
ACCs[1,0] = [58.0,58.0,65.66666666666667]
MSEs[1,0] = np.sqrt([0.002836351513,0.002836351513,0.002794642735])
UNCs[1,0] = [0.06446337932,0.06446337932,0.07045274731]
TIMEs[1,0] = [05.38,05.38,05.10]

ACCs[1,1] = [66.33333333333333,55.0,76.33333333333333]
MSEs[1,1] = np.sqrt([0.02179612809,0.002053045998,0.002706407982])
UNCs[1,1] = [0.07538835231,0.06538286466,0.1020958401]
TIMEs[1,1] = [05.10,05.24,04.16]

ACCs[1,2] = [43.0,43.0,33.0]
MSEs[1,2] = np.sqrt([0.001506843123,0.001506843123,0.002085731704])
UNCs[1,2] = [0.06070377971,0.06070377971,0.06697198869]
TIMEs[1,2] = [05.50,05.08,05.47]

# dim4
ACCs[2,0] = [60.75,60.75,46.5 ]
MSEs[2,0] = np.sqrt([0.006851689642,0.00685168964, 0.00978358523121668])
UNCs[2,0] = [0.1477011206,0.1477011206,0.155802936968229]
TIMEs[2,0] = [11.02,11.03,11.15]

ACCs[2,1] = [70.75,48.25,64.5]
MSEs[2,1] = np.sqrt([0.00963437318393834,0.00839046789,0.008166541042])
UNCs[2,1] = [0.167142104302433,0.1466680715,0.1688575713]
TIMEs[2,1] = [10.47,08.58,08.04]

ACCs[2,2] = [76.75,41.5,90.25]
MSEs[2,2] = np.sqrt([0.01092312061,0.005882356626,0.007982221699])
UNCs[2,2] = [0.2110910142,0.1600066571,0.181559609]
TIMEs[2,2] = [08.58,07.35,05.51]

EP_GP = {"ACC":ACCs, "MSE": MSEs, "UNC": UNCs, "TIME": TIMEs}


test_avg_unc = np.array([

0.019624672876733855,
0.018591767984629966,
0.022589189942891184,
0.015902700804776713,
0.014391720575867063,
0.01356453149959136,
0.017155964604625595
])

test_std_unc = np.array([

0.014647353274557517,
0.014632990028291742,
0.015003934689654497,
0.013631404656503622,
0.013704027875080496,
0.013316890634983704,
0.013938235089821149
])